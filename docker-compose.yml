version: '3.8'

services:
  # Infrastructure Services
  mongodb:
    image: mongo:6.0
    container_name: udsp-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: udsp
    volumes:
      - mongodb_data:/data/db
      - ./infrastructure/mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - udsp-network

  redis:
    image: redis:7.0-alpine
    container_name: udsp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - udsp-network

  # Core Services
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: udsp-api-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - REDIS_URL=redis://:redis123@redis:6379
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/udsp?authSource=admin
      - JWT_SECRET=your-super-secure-jwt-secret-key-here
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    networks:
      - udsp-network

  identity-service:
    build:
      context: ./services/identity-service
      dockerfile: Dockerfile
    container_name: udsp-identity-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/udsp?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379
      - ENCRYPTION_KEY=your-32-char-encryption-key-here
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./services/identity-service:/app
      - /app/node_modules
    networks:
      - udsp-network

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: udsp-auth-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/udsp?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379
      - JWT_SECRET=your-super-secure-jwt-secret-key-here
      - JWT_EXPIRES_IN=24h
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules
    networks:
      - udsp-network

  credential-service:
    build:
      context: ./services/credential-service
      dockerfile: Dockerfile
    container_name: udsp-credential-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/udsp?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379
      - ENCRYPTION_KEY=your-32-char-encryption-key-here
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./services/credential-service:/app
      - /app/node_modules
    networks:
      - udsp-network

  blockchain-adapter:
    build:
      context: ./services/blockchain-adapter
      dockerfile: Dockerfile
    container_name: udsp-blockchain-adapter
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - ETHEREUM_RPC_URL=https://sepolia.infura.io/v3/YOUR_INFURA_KEY
      - POLYGON_RPC_URL=https://polygon-mumbai.infura.io/v3/YOUR_INFURA_KEY
      - PRIVATE_KEY=your_private_key_here
      - REDIS_URL=redis://:redis123@redis:6379
    depends_on:
      - redis
    volumes:
      - ./services/blockchain-adapter:/app
      - /app/node_modules
    networks:
      - udsp-network

  compliance-service:
    build:
      context: ./services/compliance-service
      dockerfile: Dockerfile.python
    container_name: udsp-compliance-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - PYTHON_ENV=development
      - PORT=3005
      - REDIS_URL=redis://:redis123@redis:6379
      - OPENAI_API_KEY=your_openai_key_here
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/udsp?authSource=admin
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./services/compliance-service:/app
    networks:
      - udsp-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: udsp-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - REACT_APP_WS_URL=ws://localhost:8080
      - NODE_ENV=development
    depends_on:
      - api-gateway
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - udsp-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  udsp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
